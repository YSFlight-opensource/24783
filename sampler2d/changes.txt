from glsl_compile

() Add checker.h and checker.cpp


() Add
	GLuint texIdent;


() Make a texture in Initialize.
	glGenTextures(1,&texIdent);
	glActiveTexture(GL_TEXTURE0);
	glBindTexture(GL_TEXTURE_2D,texIdent);
	glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_CLAMP);
	glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_CLAMP);
	glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST);
	glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST);
	glTexImage2D(GL_TEXTURE_2D,0,GL_RGBA,checker_pattern_wid,checker_pattern_hei,0,GL_RGBA,GL_UNSIGNED_BYTE,checker_pattern);


() Add sampler2d_vertex_shader.glsl and sampler2d_fragment_shader.glsl


() In renderer.h

class Sampler2dRenderer : public RendererBase
{
public:
	GLuint attribVertexPos;
	GLuint attribTexCoordPos;
	GLuint uniformTexIdentPos;
	virtual void CacheAttributeAndUniformIdent(void);
};


() In renderer.cpp
void Sampler2dRenderer::CacheAttributeAndUniformIdent(void)
{
	attribVertexPos=glGetAttribLocation(programIdent,"vertex");
	printf("Attribute Vertex Position=%d\n",attribVertexPos);
	attribTexCoordPos=glGetAttribLocation(programIdent,"texCoord");
	printf("Attribute TexCoord Position=%d\n",attribTexCoordPos);
	uniformTexIdentPos=glGetUniformLocation(programIdent,"texIdent");
	printf("Uniform TexIdent Position=%d\n",uniformTexIdentPos);
}



() In Initialize
	sampler2d.CompileFile(
	    "sampler2d_vertex_shader.glsl",
	    "sampler2d_fragment_shader.glsl");



() In Draw
